# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test and Publish Workflow

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      ref:
        description: |
          The branch, tag or SHA to checkout. When checking out the repository that
          triggered a workflow, this defaults to the reference or SHA for that event.
          Otherwise, uses the default branch.
        required: false
        default: master

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Get GCloud CLI to install pubsub emulator
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'beta,pubsub-emulator'
      - run: npm i -g npm@9
      - run: npm ci
        name: Install root dependencies
      - run: npx lerna bootstrap --hoist
        name: Install all dependencies and symlinks using lerna bootstrap
      - run: npm run lint
        name: Lint all packages
      - run: npm run test:cov:all
        name: Launch tests for each packages
  
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'workflow_dispatch' }}
    needs: test
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    - run: npm i -g npm@9 && npm i
    - run: npm run build
    - run: git config --global user.email "bot@algoan.com" && git config --global user.name "Algoan Bot"
    - run: npx lerna version --conventional-commits --changelog-preset conventionalcommits --create-release --include-merged-tags --yes
      name: Run Lerna version
      env:
        GH_TOKEN: ${{ secrets.PUBLIC_REPO_GHA_PAT }}
    - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc 
    - run: npx lerna publish from-git --yes
